{"version":3,"file":"UI.es.js","sources":["../../lib/UI.ts"],"sourcesContent":["/*!\n * zephyr-ui v1.1.3\n * (c) 2025 Zacharia Haggy (repl1307)\n * Released under the MIT License\n */\nimport UIEventsMixin from './ui-helpers/UIEvents';\nimport UIModsMixin from './ui-helpers/UIMods';\n\n/** The base UI component, all other UI components are subclasses of this */\nclass BaseUI <T extends HTMLElement = HTMLElement>{\n  remove() { throw new Error(\"Method not implemented.\"); }\n  html: T;\n  children: BaseUI[];\n  parent: BaseUI|null;\n  preserveOnRerender: boolean;\n  \n  /** A list of all existing UI elements */\n  static elements: BaseUI[] = [];\n  /** A DOMParser instance used to convert strings into html elements */\n  static parser = new DOMParser();\n  static initialized = false;\n\n  /** Convert an html string into an html element */\n  static parse(htmlString: string) {\n    return BaseUI.parser.parseFromString(htmlString, 'text/html').body;\n  }\n  /**\n   * @param {string} tag - The tag of the HTML element that should be created (Ex: 'li' )\n   * @param {string} [textContent=''] - The text content of the HTML element\n   * @returns {HTMLElement} - An HTML element matching the provided tag\n   */\n  static createElement(tag: keyof HTMLElementTagNameMap, textContent = '') {\n    const element = document.createElement(tag);\n    element.textContent = textContent;\n    return element;\n  }\n\n  /**\n  * @param {HTMLElement|string} html - The html element that the flexbox component should be based from, if null a div is used.\n  */\n  constructor(html:keyof HTMLElementTagNameMap|T|null = 'div') {\n    if(typeof html == 'string')\n      this.html = document.createElement(html) as T;\n    else\n      this.html = (html ?? document.createElement('div')) as T;\n\n    /** A list of all child elements */\n    this.children = [];\n    /** Whether the UI element should persist across pages, if true, element is preserved */\n    this.preserveOnRerender = false;\n    /** The UI element's parent, if one exists. */\n    this.parent = null;\n    BaseUI.elements.push(this);\n  }\n}\n\nclass BaseUIConcrete<T extends HTMLElement = HTMLElement> extends BaseUI<T>{}\nconst enhancedBaseUI = UIEventsMixin(UIModsMixin(BaseUIConcrete));\n\nclass UI<T extends HTMLElement = HTMLElement> extends  enhancedBaseUI<T> {\n  declare children: UI<T>[];\n}\n\nexport { BaseUI };\nexport default UI;"],"names":["_BaseUI","htmlString","tag","textContent","element","html","BaseUI","BaseUIConcrete","enhancedBaseUI","UIEventsMixin","UIModsMixin","UI"],"mappings":"oFAAA;AAAA;AAAA;AAAA;AAAA,GASA,MAAMA,EAAN,MAAMA,CAA4C,CAChD,QAAS,CAAE,MAAM,IAAI,MAAM,yBAAyB,CAAG,CAavD,OAAO,MAAMC,EAAoB,CAC/B,OAAOD,EAAO,OAAO,gBAAgBC,EAAY,WAAW,EAAE,IAChE,CAMA,OAAO,cAAcC,EAAkCC,EAAc,GAAI,CACvE,MAAMC,EAAU,SAAS,cAAcF,CAAG,EAC1C,OAAAE,EAAQ,YAAcD,EACfC,CACT,CAKA,YAAYC,EAA0C,MAAO,CACxD,OAAOA,GAAQ,SAChB,KAAK,KAAO,SAAS,cAAcA,CAAI,EAEvC,KAAK,KAAQA,GAAQ,SAAS,cAAc,KAAK,EAGnD,KAAK,SAAW,CAAA,EAEhB,KAAK,mBAAqB,GAE1B,KAAK,OAAS,KACdL,EAAO,SAAS,KAAK,IAAI,CAC3B,CACF,EArCEA,EAAO,SAAqB,CAAA,EAE5BA,EAAO,OAAS,IAAI,UACpBA,EAAO,YAAc,GAXvB,IAAMM,EAANN,EA+CA,MAAMO,UAA4DD,CAAS,CAAC,CAC5E,MAAME,EAAiBC,EAAcC,EAAYH,CAAc,CAAC,EAEhE,MAAMI,UAAiDH,CAAkB,CAEzE"}