{"version":3,"file":"Link.es.js","sources":["../../../lib/core/Link.ts"],"sourcesContent":["import UI from '../UI';\r\nimport { Router } from '../utilities/Router';\r\n\r\n/**\r\n * A Link component that extends the UI class to represent a clickable anchor (`<a>`) element.\r\n * It allows setting the `href` attribute (URL) and optionally opens the link in a new tab.\r\n * \r\n * @class Link\r\n * @extends UI\r\n */\r\nexport default class Link extends UI<HTMLLinkElement> {\r\n    #_href = '';\r\n    #_openInNewTab = false;\r\n\r\n    /**\r\n     * Creates an instance of the Link component.\r\n     * Initializes the link with the provided URL and sets the text content to the URL.\r\n     *\r\n     * @param href - The URL to be used for the `href` attribute of the link.\r\n     */\r\n    constructor(href: string){\r\n        super('a');\r\n        this.#_href = '';\r\n        this.#_openInNewTab = false;\r\n        this.url = href;\r\n        this.setText(href);\r\n\r\n        // if a router instance exists and url refers to site, allow the router to handle the link instead\r\n        this.onClick(e => {\r\n            const url = new URL(window.location.href);\r\n\r\n            if(Router.instance && this.url.includes(url.origin)){\r\n                e?.preventDefault();\r\n                Router.handleAnchor(this.url);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Gets the current URL of the link.\r\n     * \r\n     * @returns {string} The URL set for the link.\r\n     */\r\n    get url(): string{\r\n        return this.#_href;\r\n    }\r\n\r\n    /**\r\n     * Sets the URL for the link and updates the `href` attribute of the element.\r\n     * \r\n     * @param {string} value - The URL to set for the `href` attribute.\r\n     */\r\n    set url(value: string){\r\n        this.html.href = value;\r\n        this.#_href = value;\r\n    }\r\n\r\n    /**\r\n     * Gets whether the link opens in a new tab.\r\n     * \r\n     * @returns {boolean} `true` if the link is set to open in a new tab, otherwise `false`.\r\n     */\r\n    get openInNewTab(): boolean{\r\n        return this.#_openInNewTab;\r\n    }\r\n\r\n    /**\r\n     * Sets whether the link should open in a new tab. This sets the `target` attribute to `_blank` if `true`.\r\n     * Throws an error if the provided value is not a boolean.\r\n     * \r\n     * @param {boolean} value - `true` to open the link in a new tab, `false` to open in the same tab.\r\n     * @throws {Error} If the value is not a boolean.\r\n     */\r\n    set openInNewTab(value: boolean){\r\n        if(typeof value != 'boolean'){\r\n            throw new Error(`[${value}] is not of type boolean. Property openInNewTab cannot be set.`);\r\n        }\r\n        this.#_openInNewTab = value;\r\n        this.html.target = value? '_blank' : '';\r\n    }\r\n}"],"names":["Link","UI","#_href","#_openInNewTab","href","e","url","Router","value"],"mappings":"8EAUA,MAAqBA,UAAaC,CAAoB,CAClDC,GAAS,GACTC,GAAiB,GAQjB,YAAYC,EAAa,CACrB,MAAM,GAAG,EACT,KAAKF,GAAS,GACd,KAAKC,GAAiB,GACtB,KAAK,IAAMC,EACX,KAAK,QAAQA,CAAI,EAGjB,KAAK,QAAQC,GAAK,CACd,MAAMC,EAAM,IAAI,IAAI,OAAO,SAAS,IAAI,EAErCC,EAAO,UAAY,KAAK,IAAI,SAASD,EAAI,MAAM,IAC9CD,GAAG,eAAA,EACHE,EAAO,aAAa,KAAK,GAAG,EAEpC,CAAC,CACL,CAOA,IAAI,KAAa,CACb,OAAO,KAAKL,EAChB,CAOA,IAAI,IAAIM,EAAc,CAClB,KAAK,KAAK,KAAOA,EACjB,KAAKN,GAASM,CAClB,CAOA,IAAI,cAAuB,CACvB,OAAO,KAAKL,EAChB,CASA,IAAI,aAAaK,EAAe,CAC5B,GAAG,OAAOA,GAAS,UACf,MAAM,IAAI,MAAM,IAAIA,CAAK,gEAAgE,EAE7F,KAAKL,GAAiBK,EACtB,KAAK,KAAK,OAASA,EAAO,SAAW,EACzC,CACJ"}