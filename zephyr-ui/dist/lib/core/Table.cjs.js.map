{"version":3,"file":"Table.cjs.js","sources":["../../../lib/core/Table.js"],"sourcesContent":["import UI from '../UI';\n\n//table\nexport class Table extends UI {\n  constructor(){\n    super('table');\n    this.rows = [];\n    this.columns = [];\n    this.addClass('table');\n  }\n  //content is either string or elem to be added to table\n  addRow(content=[], type='td'){\n    const row = new TableRow(this, content, type);\n    this.appendChild(row);\n    this.rows.push(row);\n    \n    //append to columns\n    while(this.columns.length < content.length)\n      this.columns.push([])\n    for(let i=0; i < content.length; i++){\n      this.columns[i].push(content[i]);\n    }\n  }\n  removeRow(row){\n    for(const cell of row){\n      row.removeChild(cell);\n    }\n    this.removeChild(row);\n  }\n}\n\n//table row\nexport class TableRow extends UI {\n  constructor(table, content, type='td'){\n    super('tr');\n    this.cells = [];\n    this.table = table;\n    for(const c of content){\n      if(c instanceof TableCell)\n        this.cells.push(c);\n      else\n        this.cells.push(new TableCell(this, c, type));\n      const cell = this.cells[this.cells.length-1];\n      cell.setAttribute('colSpan', cell.colspan);\n      cell.setAttribute('rowSpan', cell.rowspan);\n      this.appendChild(this.cells.at(-1));\n    }\n  }\n}\n\n//table cell\nexport class TableCell extends UI {\n  constructor(row, content='', type='td'){\n    super(type);\n    this.row = row;\n    this.content = content;\n    this.type = type;\n    this.colspan = 1;\n    this.rowspan = 1;\n    \n    if(typeof content != 'object')\n      this.setText(content);\n    else\n      console.warn(`Content is not a string`);\n  }\n  setColumns(count){\n    const cells = [];\n    for(const cell of this.row.cells){\n      const newCell = new TableCell(this.row, cell.content, cell.type)\n      if(cell == this)\n        newCell.colspan = count;\n    }\n    const table = this.row.table;\n    const newRow = new TableRow(this.row.table, [], this.type);\n    for(const c of cells){\n      newRow.cells.push(c);\n      newRow.appendChild(c);\n    }\n    table.appendChild(newRow);\n    table.removeChild(this.row);\n  }\n}"],"names":["Table","UI","content","type","row","TableRow","i","cell","table","c","TableCell","count","cells","newCell","newRow"],"mappings":"gHAGO,MAAMA,UAAcC,EAAAA,OAAG,CAC5B,aAAa,CACX,MAAM,OAAO,EACb,KAAK,KAAO,CAAA,EACZ,KAAK,QAAU,CAAA,EACf,KAAK,SAAS,OAAO,CACvB,CAEA,OAAOC,EAAQ,GAAIC,EAAK,KAAK,CAC3B,MAAMC,EAAM,IAAIC,EAAS,KAAMH,EAASC,CAAI,EAK5C,IAJA,KAAK,YAAYC,CAAG,EACpB,KAAK,KAAK,KAAKA,CAAG,EAGZ,KAAK,QAAQ,OAASF,EAAQ,QAClC,KAAK,QAAQ,KAAK,CAAA,CAAE,EACtB,QAAQI,EAAE,EAAGA,EAAIJ,EAAQ,OAAQI,IAC/B,KAAK,QAAQA,CAAC,EAAE,KAAKJ,EAAQI,CAAC,CAAC,CAEnC,CACA,UAAUF,EAAI,CACZ,UAAUG,KAAQH,EAChBA,EAAI,YAAYG,CAAI,EAEtB,KAAK,YAAYH,CAAG,CACtB,CACF,CAGO,MAAMC,UAAiBJ,EAAAA,OAAG,CAC/B,YAAYO,EAAON,EAASC,EAAK,KAAK,CACpC,MAAM,IAAI,EACV,KAAK,MAAQ,CAAA,EACb,KAAK,MAAQK,EACb,UAAUC,KAAKP,EAAQ,CAClBO,aAAaC,EACd,KAAK,MAAM,KAAKD,CAAC,EAEjB,KAAK,MAAM,KAAK,IAAIC,EAAU,KAAMD,EAAGN,CAAI,CAAC,EAC9C,MAAMI,EAAO,KAAK,MAAM,KAAK,MAAM,OAAO,CAAC,EAC3CA,EAAK,aAAa,UAAWA,EAAK,OAAO,EACzCA,EAAK,aAAa,UAAWA,EAAK,OAAO,EACzC,KAAK,YAAY,KAAK,MAAM,GAAG,EAAE,CAAC,CACpC,CACF,CACF,CAGO,MAAMG,UAAkBT,EAAAA,OAAG,CAChC,YAAYG,EAAKF,EAAQ,GAAIC,EAAK,KAAK,CACrC,MAAMA,CAAI,EACV,KAAK,IAAMC,EACX,KAAK,QAAUF,EACf,KAAK,KAAOC,EACZ,KAAK,QAAU,EACf,KAAK,QAAU,EAEZ,OAAOD,GAAW,SACnB,KAAK,QAAQA,CAAO,EAEpB,QAAQ,KAAK,yBAAyB,CAC1C,CACA,WAAWS,EAAM,CACf,MAAMC,EAAQ,CAAA,EACd,UAAUL,KAAQ,KAAK,IAAI,MAAM,CAC/B,MAAMM,EAAU,IAAIH,EAAU,KAAK,IAAKH,EAAK,QAASA,EAAK,IAAI,EAC5DA,GAAQ,OACTM,EAAQ,QAAUF,EACtB,CACA,MAAMH,EAAQ,KAAK,IAAI,MACjBM,EAAS,IAAIT,EAAS,KAAK,IAAI,MAAO,CAAA,EAAI,KAAK,IAAI,EACzD,UAAUI,KAAKG,EACbE,EAAO,MAAM,KAAKL,CAAC,EACnBK,EAAO,YAAYL,CAAC,EAEtBD,EAAM,YAAYM,CAAM,EACxBN,EAAM,YAAY,KAAK,GAAG,CAC5B,CACF"}